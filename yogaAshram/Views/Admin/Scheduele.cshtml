

@using System.Collections
@model DateTime

@{
    ViewBag.Title = "Месяц и расписание";
    Layout = "_Layout";
}
<div class="container">
    <a class="btn btn-outline-dark mt-1" asp-action="Scheduele" asp-route-month="@Model.AddMonths(-1).Month" asp-route-branchId="@ViewBag.BranchId">@Model.AddMonths(-1).ToString("MMMM")</a>
  
    <a class="btn btn-outline-dark mt-1" asp-action="Scheduele" asp-route-month="@Model.AddMonths(1).Month" asp-route-branchId="@ViewBag.BranchId">@Model.AddMonths(1).ToString("MMMM")</a>
   
	    <calendar month="@Model.Month" year="@Model.Year" events="@ViewBag.Events"/>
	   <p id="groupIdArray" class="text-hide">@ViewBag.GroupIdArray</p> 
    
</div>

<div class="modal fade w-100" id="scheduleCreate" tabindex="-1" role="dialog" aria-labelledby="exampleModalCenterTitle" aria-hidden="true">
	<div class="modal-dialog modal-dialog-centered modal-lg" role="document">
		<div class="modal-content">
			<div class="modal-header">
				<h5 class="modal-title" id="exampleModalLongTitle">Создать расписание</h5>
				<button type="button" class="close" data-dismiss="modal" aria-label="Close">
					<span aria-hidden="true">&times;</span>
				</button>
			</div>
			<div class="modal-body">
				<div id="formToReload">
					<form id="createSchedule">

						@if (@Enumerable.Count(ViewBag.Groups) == 0)
						{
							<p>Список групп пуст. Необходимо создать группу</p>
						}
						else
						{
							<label>Выберите группу из списка:</label>
							<select name="groupId" class="form-control mb-2 w-50" id="selectInput">
								<option value="noGroup">Выберите группу</option>
								@foreach (Group group in (IEnumerable) @ViewBag.Groups)
								{
									<option value="@group.Id"> @group.Name</option>
								}
							</select>
						}
						<label>Выберите цвет:</label>
						<select name="color" class="form-control mb-2 w-25" id="selectColor">
							<option value="primary" class="bg-primary">Синий</option>
							<option value="success" class="bg-success">Зеленый</option>
							<option value="danger" class="bg-danger">Красный</option>
							<option value="warning" class="bg-warning">Желтый</option>
							<option value="info" class="bg-info">Голубой</option>
							<option value="dark" class="bg-dark text-light">Черный</option>
						</select>
						<label class="mt-2">Время начала занятия:</label>
						<input type="time" id="timeInputStart" name="scheduleTime" class="form-control w-25" onchange="validateSalaryFrom()">
						<label class="mt-2">Время окончания занятия:</label>
						<input type="time" id="timeInputFinish" name="scheduleFinishTime" class="form-control w-25" onchange="validateSalaryTo()">


						<div class="mt-3 mb-2">

							<label class="mt-2 mb-2">Выберите дни:</label>
							<div class="mt-2">
								<div id="weekdays"> </div>
							</div>
							<div class="areaDates">
								<textarea name="dayOfWeeks" id="dayOfWeekInput" cols="30" rows="10"></textarea>
							</div>

						</div>
						<button class="btn btn-secondary mt-4" type="submit" id="submitBtn">Добавить</button>
						<div class="mt-2 text-danger" id="error"></div>
					</form>
				</div>
			</div>
			<div class="modal-footer">
				<button type="button" class="btn btn-dark " data-dismiss="modal">Закрыть</button>
			</div>
		</div>
	</div>
</div>

@section Scripts{
	<script >
	$("#weekdays").weekLine({
            mousedownSel: false,            
            dayLabels: ["Понедельник", "Вторник", "Среда", "Четверг", "Пятница", "Суббота", "Воскресенье"], 
            onChange: function () {
                   $("#dayOfWeekInput").val(
                           $(this).weekLine('getSelected')
              );
            }
     });
	</script>
	<script>      
       var groupsIds =  $('#groupIdArray').text();            
       $.each(groupsIds.split(' '), function(index, value) {
         $('select > option').filter(function () {
         	return $(this).val() == value
         }).prop('disabled', true)
       });      
    </script>
	<script >
  function validateSalaryTo(){
         var timeFrom = parseInt($("#timeInputStart").val());
    var timeTo = parseInt($("#timeInputFinish").val());     
           if (timeTo < timeFrom) {
           	 $('#error').text('Время начала занятия не может больше времени окончания').show().delay(1500).fadeOut();
              $('#submitBtn').prop('disabled', true);
            } 
          else {
              $('#submitBtn').prop('disabled', false);             
            }
          };
  function validateSalaryFrom(){
           var timeFrom = parseInt($("#timeInputStart").val());
      var timeTo = parseInt($("#timeInputFinish").val());     
             if (timeTo < timeFrom) {
                $('#submitBtn').prop('disabled', true);
                 $('#error').text('Время начала занятия не может больше времени окончания').show().delay(1500).fadeOut();
              } 
            else {
                $('#submitBtn').prop('disabled', false);            
              }
            };
</script>
	<script >
	function validateForm() {
   
        var timeStart = $('#timeInputStart').val();
        var timeFinish = $('#timeInputFinish').val();
        var week = $('#dayOfWeekInput').val();
        var group = $('#selectInput').val();
       
            if (week === "") {
            $('#error').text('Необходимо выбрать день').show().delay(1500).fadeOut();
            return false;
            }
            else if (group === "noGroup"){
            $('#error').text('Необходимо выбрать группу').show().delay(1500).fadeOut();
                return false;
            }
            else if (timeStart === ""){
            $('#error').text('Необходимо выбрать время начала занятия').show().delay(1500).fadeOut();
                return false;
            }
            else if (timeFinish === ""){
            $('#error').text('Необходимо выбрать время окончания занятия').show().delay(1500).fadeOut();
                return false;
            }
            else {
            	
            	$.ajax({
                url : '@Url.Action("Create", "Schedule")',
                type : 'POST',
                data : {              
                'groupId' : $("#selectInput").val(),
                'color': $("#selectColor").val(),
                'scheduleTime': timeStart,
                'scheduleFinishTime': timeFinish, 
                'dayOfWeeks': week,      
             },                                                         
            success: function (data) {
             console.log(data);
                                                
             setTimeout(function(){  
             if(data === "errorTime"){
             $('#error').text('В это время уже есть занятие').show().delay(1500).fadeOut();        
             }  
             if(data === "errorGroup"){
             $('#error').text('Не найдено ни одной группы').show().delay(1500).fadeOut();        
             } 
             else if (data === "success"){
              location.reload();              
              }                                                                                                                
              }, 500)                            
          },
        })
      }          
   }
	</script>
	<script >
	$(function () {   
        $('#createSchedule').on('submit', function (e) {
          e.preventDefault();    
          validateForm();
        });
      });
	</script>
	<script >
    	$(document).ready(function(){
          $('[data-toggle="tooltip"]').tooltip();
        });
    </script>
}
