@using System.Collections
@model MembershipExtendModelView
@{
    ViewBag.Title = "Продление абонемента";
    Layout = "_Layout";
}

<div class="container">
    <h5 class="text-center">Продление абонемента</h5>

    <p class="text-hide" id="date">@ViewBag.Date.AddDays(1).ToString("dd.MM.yyyy")</p>
          
    <div class="row">
                  <div class="col-sm-6">
                      <div class="form-group">
                          <label>Выберите тип абонемента</label>
                          <select class="form-control" id="membershipSelect">
                              @foreach (Membership membership in (IEnumerable) @ViewBag.Memberships)
                              {
                                  <option value='{"membershipId":"@membership.Id", "price":"@membership.Price"}'>@membership.Name</option>
                              }
                          </select>
                      </div>
                  </div>
                  <div class="col-sm-6">
                      <div class="form-group">
                          <label>Выберите группу</label>
                          <select class="form-control" id="groupSelect">
                              @foreach (var schedule in ViewBag.Schedules)
                              {
                                  <option value='{"group":"@schedule.GroupId", "days":@{ string result = String.Join(",", @schedule.DayOfWeeksString);}"@result"}'>@schedule.Group.Name</option>
                              }
                          </select>
                      </div>
                  </div>
              </div>
        
    <hr>
        @if (Model.Client.Paid == Paid.Есть_долг)
        {
            <p>Есть долг в размере <span id="debts">@(-Model.Client.Balance)</span> тг.</p>
        }
        @if (Model.Client.Balance > 0)
        {
            <p>У клиента есть предоплата в размере <span id="prepayment">@(Model.Client.Balance)</span> тг.</p>
        } 
        <p><strong>Цена абонемента:</strong> <span id="price"></span> тг.</p>
        <p><strong>К оплате:</strong> <span id="toPay"></span> тг.</p>
        <p class="text-danger" id="errorText"></p>
        <hr>
        <div class="row">
            <div class="col-sm-6">
                <div class="form-group">
                    <label>Оплата налом</label>
                    <input id="cashSumExtend" type="number" placeholder="0" value="0" class="form-control">
                </div>
            </div>
            <div class="col-sm-6">
                <div class="form-group">
                    <label>Безнал</label>
                    <input id="cardSumExtend" type="number" placeholder="0" value="0" class="form-control">
                    <p id="invalidExtendSum" class="text-danger"></p>
                </div>
            </div>
        </div>
        <div class="form-group">
            <label>Добавьте комментарий</label>
            <textarea id="commentPayment" type="text" class="form-control" rows="2"></textarea>
        </div>
        <div class="form-group">
            <label>Выберите дату</label>
            <input type="text" id="datepicker" class="form-control w-25" autocomplete="off" required>
        </div>
        <button id="submitPaymentCreate" type="button" class="btn btn-outline-dark">Продлить</button>
    </div>

@section Scripts
{
    <script>
    $('#submitPaymentCreate').on('click', function () {
        if ($('#debts').val() > $('#cashSumExtend').val() + $('#cardSumExtend').val()) {
            $('#invalidExtendSum').html("Минимальная сумма платежа - " + $('#debts').val() + ' (размер долга)')
        }
        else if ($('#datepicker').val() === ''){
            $('#errorText').text('Выберите дату');
        }
        else {
            var optionValueGroup = $('#groupSelect').val();                         	  
            var objGroup = $.parseJSON(optionValueGroup);
            var optionValueMembership = $('#membershipSelect').val();
            var objMembership = $.parseJSON(optionValueMembership);
            $.ajax({
                url: '@Url.Action("ExtendAjax", "Membership")',
                type: "POST",
                datatype: "json",
                data: {
                    "Comment": $("#commentPayment").val(),
                    "ClientId": @Model.ClientId,
                    "CardSum": $('#cardSumExtend').val(),
                    "Type": $('#paymentTypeSelect').val(),
                    "CashSum": $('#cashSumExtend').val(),
                    "MembershipId": objMembership.membershipId,
                    "GroupId": objGroup.group,
                    "Date": $('#datepicker').val()
                },
                success: function (data) {
                    if (data === "success") { 
                        alert("Абонемент продлен успешно!");
                        window.location.href = '@Url.Action("Index", "Payments", new {branchId = @Model.BranchId})';                 
                    }
                    else if(data === "errorNotEnoughSum"){
                        $('#errorText').text("Есть долг за прошлый абонемент");
                    }
                    else {
                         $('#errorText').text("Ошибка. Попробуйте еще раз");
                    }
                }
            })
        }
    })
</script>
    <script >
function showHideOptions(){
        var optionValue = $('#groupSelect').val();                         	  
        var obj = $.parseJSON(optionValue);
        var daysArray = ['Воскресенье', 'Понедельник', 'Вторник', 'Среда', 'Четверг', 'Пятница', 'Суббота'];
        var daysSelected = obj.days.split(",");
        let indexes = daysSelected.map(function(word) { return daysArray.indexOf(word); })
        let disabledDays = daysArray.filter( function( el ) {return daysSelected.indexOf( el ) < 0;});
        let disabledIndexes = disabledDays.map(function(word) { return daysArray.indexOf(word); }); 
        var date = $("#date").text();
        $('#datepicker').datepicker({
            language: "ru",
            startDate: date,
            format: "dd.mm.yyyy",
            weekStart: 1,
            todayHighlight: true,
            daysOfWeekDisabled: disabledIndexes,
            daysOfWeekHighlighted: indexes
        });
}
$(document).ready(function() {
   showHideOptions();
$('#groupSelect').on('change',function(){
    $('#datepicker').datepicker('destroy');
    $('#datepicker').val('');
   showHideOptions();
   });
 });

</script>
    <script >
function showPrice(){
     var optionValueMembership = $('#membershipSelect').val();
     var objMembership = $.parseJSON(optionValueMembership);
     $('#price').text(objMembership.price);
     var prepayment = $('#prepayment').text();
     var debt = $('#debts').text();
      console.log(prepayment)
     if(prepayment !== '' && debt === ''){
        
         var toPay = parseInt(objMembership.price) - parseInt(prepayment);
         $('#toPay').text(toPay);
     }
     else if(debt !== '' && prepayment === ''){
         var toPayWithDebt = parseInt(objMembership.price) + parseInt(debt);
          $('#toPay').text(toPayWithDebt);
     }
     else if(debt === '' && prepayment === ''){
         $('#toPay').text(objMembership.price);
     }
    }
$(document).ready(function() {
   showPrice();
$('#membershipSelect').on('change',function(){    
   showPrice();
   });
 });
</script>
}